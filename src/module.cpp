#include <windows.h>
#include <stdio.h>
#include <string>

// three functions from extensions.cpp
void* Hook_glProgramBinary(void *real);
void* Hook_glShaderSource(void *real);
bool dll_no_longer_needed();

typedef void* (__stdcall *wglGetProcAddress_type)(char*);

wglGetProcAddress_type wglGetProcAddress_real;

void * __stdcall My_wglGetProcAddress(char *ProcName)
{
	void *ProcAddr = wglGetProcAddress_real(ProcName);

	if (!strcmp(ProcName, "glProgramBinary")) ProcAddr = Hook_glProgramBinary(ProcAddr);
	else if (!strcmp(ProcName, "glShaderSource")) ProcAddr = Hook_glShaderSource(ProcAddr);

	return ProcAddr;
}

extern "C"
{
	void *GlmfBeginGlsBlock_real;
	void *GlmfCloseMetaFile_real;
	void *GlmfEndGlsBlock_real;
	void *GlmfEndPlayback_real;
	void *GlmfInitPlayback_real;
	void *GlmfPlayGlsRecord_real;
	void *glAccum_real;
	void *glAlphaFunc_real;
	void *glAreTexturesResident_real;
	void *glArrayElement_real;
	void *glBegin_real;
	void *glBindTexture_real;
	void *glBitmap_real;
	void *glBlendFunc_real;
	void *glCallList_real;
	void *glCallLists_real;
	void *glClear_real;
	void *glClearAccum_real;
	void *glClearColor_real;
	void *glClearDepth_real;
	void *glClearIndex_real;
	void *glClearStencil_real;
	void *glClipPlane_real;
	void *glColor3b_real;
	void *glColor3bv_real;
	void *glColor3d_real;
	void *glColor3dv_real;
	void *glColor3f_real;
	void *glColor3fv_real;
	void *glColor3i_real;
	void *glColor3iv_real;
	void *glColor3s_real;
	void *glColor3sv_real;
	void *glColor3ub_real;
	void *glColor3ubv_real;
	void *glColor3ui_real;
	void *glColor3uiv_real;
	void *glColor3us_real;
	void *glColor3usv_real;
	void *glColor4b_real;
	void *glColor4bv_real;
	void *glColor4d_real;
	void *glColor4dv_real;
	void *glColor4f_real;
	void *glColor4fv_real;
	void *glColor4i_real;
	void *glColor4iv_real;
	void *glColor4s_real;
	void *glColor4sv_real;
	void *glColor4ub_real;
	void *glColor4ubv_real;
	void *glColor4ui_real;
	void *glColor4uiv_real;
	void *glColor4us_real;
	void *glColor4usv_real;
	void *glColorMask_real;
	void *glColorMaterial_real;
	void *glColorPointer_real;
	void *glCopyPixels_real;
	void *glCopyTexImage1D_real;
	void *glCopyTexImage2D_real;
	void *glCopyTexSubImage1D_real;
	void *glCopyTexSubImage2D_real;
	void *glCullFace_real;
	void *glDebugEntry_real;
	void *glDeleteLists_real;
	void *glDeleteTextures_real;
	void *glDepthFunc_real;
	void *glDepthMask_real;
	void *glDepthRange_real;
	void *glDisable_real;
	void *glDisableClientState_real;
	void *glDrawArrays_real;
	void *glDrawBuffer_real;
	void *glDrawElements_real;
	void *glDrawPixels_real;
	void *glEdgeFlag_real;
	void *glEdgeFlagPointer_real;
	void *glEdgeFlagv_real;
	void *glEnable_real;
	void *glEnableClientState_real;
	void *glEnd_real;
	void *glEndList_real;
	void *glEvalCoord1d_real;
	void *glEvalCoord1dv_real;
	void *glEvalCoord1f_real;
	void *glEvalCoord1fv_real;
	void *glEvalCoord2d_real;
	void *glEvalCoord2dv_real;
	void *glEvalCoord2f_real;
	void *glEvalCoord2fv_real;
	void *glEvalMesh1_real;
	void *glEvalMesh2_real;
	void *glEvalPoint1_real;
	void *glEvalPoint2_real;
	void *glFeedbackBuffer_real;
	void *glFinish_real;
	void *glFlush_real;
	void *glFogf_real;
	void *glFogfv_real;
	void *glFogi_real;
	void *glFogiv_real;
	void *glFrontFace_real;
	void *glFrustum_real;
	void *glGenLists_real;
	void *glGenTextures_real;
	void *glGetBooleanv_real;
	void *glGetClipPlane_real;
	void *glGetDoublev_real;
	void *glGetError_real;
	void *glGetFloatv_real;
	void *glGetIntegerv_real;
	void *glGetLightfv_real;
	void *glGetLightiv_real;
	void *glGetMapdv_real;
	void *glGetMapfv_real;
	void *glGetMapiv_real;
	void *glGetMaterialfv_real;
	void *glGetMaterialiv_real;
	void *glGetPixelMapfv_real;
	void *glGetPixelMapuiv_real;
	void *glGetPixelMapusv_real;
	void *glGetPointerv_real;
	void *glGetPolygonStipple_real;
	void *glGetString_real;
	void *glGetTexEnvfv_real;
	void *glGetTexEnviv_real;
	void *glGetTexGendv_real;
	void *glGetTexGenfv_real;
	void *glGetTexGeniv_real;
	void *glGetTexImage_real;
	void *glGetTexLevelParameterfv_real;
	void *glGetTexLevelParameteriv_real;
	void *glGetTexParameterfv_real;
	void *glGetTexParameteriv_real;
	void *glHint_real;
	void *glIndexMask_real;
	void *glIndexPointer_real;
	void *glIndexd_real;
	void *glIndexdv_real;
	void *glIndexf_real;
	void *glIndexfv_real;
	void *glIndexi_real;
	void *glIndexiv_real;
	void *glIndexs_real;
	void *glIndexsv_real;
	void *glIndexub_real;
	void *glIndexubv_real;
	void *glInitNames_real;
	void *glInterleavedArrays_real;
	void *glIsEnabled_real;
	void *glIsList_real;
	void *glIsTexture_real;
	void *glLightModelf_real;
	void *glLightModelfv_real;
	void *glLightModeli_real;
	void *glLightModeliv_real;
	void *glLightf_real;
	void *glLightfv_real;
	void *glLighti_real;
	void *glLightiv_real;
	void *glLineStipple_real;
	void *glLineWidth_real;
	void *glListBase_real;
	void *glLoadIdentity_real;
	void *glLoadMatrixd_real;
	void *glLoadMatrixf_real;
	void *glLoadName_real;
	void *glLogicOp_real;
	void *glMap1d_real;
	void *glMap1f_real;
	void *glMap2d_real;
	void *glMap2f_real;
	void *glMapGrid1d_real;
	void *glMapGrid1f_real;
	void *glMapGrid2d_real;
	void *glMapGrid2f_real;
	void *glMaterialf_real;
	void *glMaterialfv_real;
	void *glMateriali_real;
	void *glMaterialiv_real;
	void *glMatrixMode_real;
	void *glMultMatrixd_real;
	void *glMultMatrixf_real;
	void *glNewList_real;
	void *glNormal3b_real;
	void *glNormal3bv_real;
	void *glNormal3d_real;
	void *glNormal3dv_real;
	void *glNormal3f_real;
	void *glNormal3fv_real;
	void *glNormal3i_real;
	void *glNormal3iv_real;
	void *glNormal3s_real;
	void *glNormal3sv_real;
	void *glNormalPointer_real;
	void *glOrtho_real;
	void *glPassThrough_real;
	void *glPixelMapfv_real;
	void *glPixelMapuiv_real;
	void *glPixelMapusv_real;
	void *glPixelStoref_real;
	void *glPixelStorei_real;
	void *glPixelTransferf_real;
	void *glPixelTransferi_real;
	void *glPixelZoom_real;
	void *glPointSize_real;
	void *glPolygonMode_real;
	void *glPolygonOffset_real;
	void *glPolygonStipple_real;
	void *glPopAttrib_real;
	void *glPopClientAttrib_real;
	void *glPopMatrix_real;
	void *glPopName_real;
	void *glPrioritizeTextures_real;
	void *glPushAttrib_real;
	void *glPushClientAttrib_real;
	void *glPushMatrix_real;
	void *glPushName_real;
	void *glRasterPos2d_real;
	void *glRasterPos2dv_real;
	void *glRasterPos2f_real;
	void *glRasterPos2fv_real;
	void *glRasterPos2i_real;
	void *glRasterPos2iv_real;
	void *glRasterPos2s_real;
	void *glRasterPos2sv_real;
	void *glRasterPos3d_real;
	void *glRasterPos3dv_real;
	void *glRasterPos3f_real;
	void *glRasterPos3fv_real;
	void *glRasterPos3i_real;
	void *glRasterPos3iv_real;
	void *glRasterPos3s_real;
	void *glRasterPos3sv_real;
	void *glRasterPos4d_real;
	void *glRasterPos4dv_real;
	void *glRasterPos4f_real;
	void *glRasterPos4fv_real;
	void *glRasterPos4i_real;
	void *glRasterPos4iv_real;
	void *glRasterPos4s_real;
	void *glRasterPos4sv_real;
	void *glReadBuffer_real;
	void *glReadPixels_real;
	void *glRectd_real;
	void *glRectdv_real;
	void *glRectf_real;
	void *glRectfv_real;
	void *glRecti_real;
	void *glRectiv_real;
	void *glRects_real;
	void *glRectsv_real;
	void *glRenderMode_real;
	void *glRotated_real;
	void *glRotatef_real;
	void *glScaled_real;
	void *glScalef_real;
	void *glScissor_real;
	void *glSelectBuffer_real;
	void *glShadeModel_real;
	void *glStencilFunc_real;
	void *glStencilMask_real;
	void *glStencilOp_real;
	void *glTexCoord1d_real;
	void *glTexCoord1dv_real;
	void *glTexCoord1f_real;
	void *glTexCoord1fv_real;
	void *glTexCoord1i_real;
	void *glTexCoord1iv_real;
	void *glTexCoord1s_real;
	void *glTexCoord1sv_real;
	void *glTexCoord2d_real;
	void *glTexCoord2dv_real;
	void *glTexCoord2f_real;
	void *glTexCoord2fv_real;
	void *glTexCoord2i_real;
	void *glTexCoord2iv_real;
	void *glTexCoord2s_real;
	void *glTexCoord2sv_real;
	void *glTexCoord3d_real;
	void *glTexCoord3dv_real;
	void *glTexCoord3f_real;
	void *glTexCoord3fv_real;
	void *glTexCoord3i_real;
	void *glTexCoord3iv_real;
	void *glTexCoord3s_real;
	void *glTexCoord3sv_real;
	void *glTexCoord4d_real;
	void *glTexCoord4dv_real;
	void *glTexCoord4f_real;
	void *glTexCoord4fv_real;
	void *glTexCoord4i_real;
	void *glTexCoord4iv_real;
	void *glTexCoord4s_real;
	void *glTexCoord4sv_real;
	void *glTexCoordPointer_real;
	void *glTexEnvf_real;
	void *glTexEnvfv_real;
	void *glTexEnvi_real;
	void *glTexEnviv_real;
	void *glTexGend_real;
	void *glTexGendv_real;
	void *glTexGenf_real;
	void *glTexGenfv_real;
	void *glTexGeni_real;
	void *glTexGeniv_real;
	void *glTexImage1D_real;
	void *glTexImage2D_real;
	void *glTexParameterf_real;
	void *glTexParameterfv_real;
	void *glTexParameteri_real;
	void *glTexParameteriv_real;
	void *glTexSubImage1D_real;
	void *glTexSubImage2D_real;
	void *glTranslated_real;
	void *glTranslatef_real;
	void *glVertex2d_real;
	void *glVertex2dv_real;
	void *glVertex2f_real;
	void *glVertex2fv_real;
	void *glVertex2i_real;
	void *glVertex2iv_real;
	void *glVertex2s_real;
	void *glVertex2sv_real;
	void *glVertex3d_real;
	void *glVertex3dv_real;
	void *glVertex3f_real;
	void *glVertex3fv_real;
	void *glVertex3i_real;
	void *glVertex3iv_real;
	void *glVertex3s_real;
	void *glVertex3sv_real;
	void *glVertex4d_real;
	void *glVertex4dv_real;
	void *glVertex4f_real;
	void *glVertex4fv_real;
	void *glVertex4i_real;
	void *glVertex4iv_real;
	void *glVertex4s_real;
	void *glVertex4sv_real;
	void *glVertexPointer_real;
	void *glViewport_real;
	void *wglChoosePixelFormat_real;
	void *wglCopyContext_real;
	void *wglCreateContext_real;
	void *wglCreateLayerContext_real;
	void *wglDeleteContext_real;
	void *wglDescribeLayerPlane_real;
	void *wglDescribePixelFormat_real;
	void *wglGetCurrentContext_real;
	void *wglGetCurrentDC_real;
	void *wglGetDefaultProcAddress_real;
	void *wglGetLayerPaletteEntries_real;
	void *wglGetPixelFormat_real;
	wglGetProcAddress_type wglGetProcAddress_hook = My_wglGetProcAddress;
	void *wglMakeCurrent_real;
	void *wglRealizeLayerPalette_real;
	void *wglSetLayerPaletteEntries_real;
	void *wglSetPixelFormat_real;
	void *wglShareLists_real;
	void *wglSwapBuffers_real;
	void *wglSwapLayerBuffers_real;
	void *wglSwapMultipleBuffers_real;
	void *wglUseFontBitmapsA_real;
	void *wglUseFontBitmapsW_real;
	void *wglUseFontOutlinesA_real;
	void *wglUseFontOutlinesW_real;
}

bool module_init()
{
	char system32[MAX_PATH];
	if (!GetSystemDirectoryA(system32, MAX_PATH)) return false;

	std::string opengl32dll = std::string(system32) + "\\opengl32.dll";
	HMODULE hModule = LoadLibraryA(opengl32dll.c_str());
	if (!hModule) return false;

	GlmfBeginGlsBlock_real = GetProcAddress(hModule, "GlmfBeginGlsBlock");
	GlmfCloseMetaFile_real = GetProcAddress(hModule, "GlmfCloseMetaFile");
	GlmfEndGlsBlock_real = GetProcAddress(hModule, "GlmfEndGlsBlock");
	GlmfEndPlayback_real = GetProcAddress(hModule, "GlmfEndPlayback");
	GlmfInitPlayback_real = GetProcAddress(hModule, "GlmfInitPlayback");
	GlmfPlayGlsRecord_real = GetProcAddress(hModule, "GlmfPlayGlsRecord");
	glAccum_real = GetProcAddress(hModule, "glAccum");
	glAlphaFunc_real = GetProcAddress(hModule, "glAlphaFunc");
	glAreTexturesResident_real = GetProcAddress(hModule, "glAreTexturesResident");
	glArrayElement_real = GetProcAddress(hModule, "glArrayElement");
	glBegin_real = GetProcAddress(hModule, "glBegin");
	glBindTexture_real = GetProcAddress(hModule, "glBindTexture");
	glBitmap_real = GetProcAddress(hModule, "glBitmap");
	glBlendFunc_real = GetProcAddress(hModule, "glBlendFunc");
	glCallList_real = GetProcAddress(hModule, "glCallList");
	glCallLists_real = GetProcAddress(hModule, "glCallLists");
	glClear_real = GetProcAddress(hModule, "glClear");
	glClearAccum_real = GetProcAddress(hModule, "glClearAccum");
	glClearColor_real = GetProcAddress(hModule, "glClearColor");
	glClearDepth_real = GetProcAddress(hModule, "glClearDepth");
	glClearIndex_real = GetProcAddress(hModule, "glClearIndex");
	glClearStencil_real = GetProcAddress(hModule, "glClearStencil");
	glClipPlane_real = GetProcAddress(hModule, "glClipPlane");
	glColor3b_real = GetProcAddress(hModule, "glColor3b");
	glColor3bv_real = GetProcAddress(hModule, "glColor3bv");
	glColor3d_real = GetProcAddress(hModule, "glColor3d");
	glColor3dv_real = GetProcAddress(hModule, "glColor3dv");
	glColor3f_real = GetProcAddress(hModule, "glColor3f");
	glColor3fv_real = GetProcAddress(hModule, "glColor3fv");
	glColor3i_real = GetProcAddress(hModule, "glColor3i");
	glColor3iv_real = GetProcAddress(hModule, "glColor3iv");
	glColor3s_real = GetProcAddress(hModule, "glColor3s");
	glColor3sv_real = GetProcAddress(hModule, "glColor3sv");
	glColor3ub_real = GetProcAddress(hModule, "glColor3ub");
	glColor3ubv_real = GetProcAddress(hModule, "glColor3ubv");
	glColor3ui_real = GetProcAddress(hModule, "glColor3ui");
	glColor3uiv_real = GetProcAddress(hModule, "glColor3uiv");
	glColor3us_real = GetProcAddress(hModule, "glColor3us");
	glColor3usv_real = GetProcAddress(hModule, "glColor3usv");
	glColor4b_real = GetProcAddress(hModule, "glColor4b");
	glColor4bv_real = GetProcAddress(hModule, "glColor4bv");
	glColor4d_real = GetProcAddress(hModule, "glColor4d");
	glColor4dv_real = GetProcAddress(hModule, "glColor4dv");
	glColor4f_real = GetProcAddress(hModule, "glColor4f");
	glColor4fv_real = GetProcAddress(hModule, "glColor4fv");
	glColor4i_real = GetProcAddress(hModule, "glColor4i");
	glColor4iv_real = GetProcAddress(hModule, "glColor4iv");
	glColor4s_real = GetProcAddress(hModule, "glColor4s");
	glColor4sv_real = GetProcAddress(hModule, "glColor4sv");
	glColor4ub_real = GetProcAddress(hModule, "glColor4ub");
	glColor4ubv_real = GetProcAddress(hModule, "glColor4ubv");
	glColor4ui_real = GetProcAddress(hModule, "glColor4ui");
	glColor4uiv_real = GetProcAddress(hModule, "glColor4uiv");
	glColor4us_real = GetProcAddress(hModule, "glColor4us");
	glColor4usv_real = GetProcAddress(hModule, "glColor4usv");
	glColorMask_real = GetProcAddress(hModule, "glColorMask");
	glColorMaterial_real = GetProcAddress(hModule, "glColorMaterial");
	glColorPointer_real = GetProcAddress(hModule, "glColorPointer");
	glCopyPixels_real = GetProcAddress(hModule, "glCopyPixels");
	glCopyTexImage1D_real = GetProcAddress(hModule, "glCopyTexImage1D");
	glCopyTexImage2D_real = GetProcAddress(hModule, "glCopyTexImage2D");
	glCopyTexSubImage1D_real = GetProcAddress(hModule, "glCopyTexSubImage1D");
	glCopyTexSubImage2D_real = GetProcAddress(hModule, "glCopyTexSubImage2D");
	glCullFace_real = GetProcAddress(hModule, "glCullFace");
	glDebugEntry_real = GetProcAddress(hModule, "glDebugEntry");
	glDeleteLists_real = GetProcAddress(hModule, "glDeleteLists");
	glDeleteTextures_real = GetProcAddress(hModule, "glDeleteTextures");
	glDepthFunc_real = GetProcAddress(hModule, "glDepthFunc");
	glDepthMask_real = GetProcAddress(hModule, "glDepthMask");
	glDepthRange_real = GetProcAddress(hModule, "glDepthRange");
	glDisable_real = GetProcAddress(hModule, "glDisable");
	glDisableClientState_real = GetProcAddress(hModule, "glDisableClientState");
	glDrawArrays_real = GetProcAddress(hModule, "glDrawArrays");
	glDrawBuffer_real = GetProcAddress(hModule, "glDrawBuffer");
	glDrawElements_real = GetProcAddress(hModule, "glDrawElements");
	glDrawPixels_real = GetProcAddress(hModule, "glDrawPixels");
	glEdgeFlag_real = GetProcAddress(hModule, "glEdgeFlag");
	glEdgeFlagPointer_real = GetProcAddress(hModule, "glEdgeFlagPointer");
	glEdgeFlagv_real = GetProcAddress(hModule, "glEdgeFlagv");
	glEnable_real = GetProcAddress(hModule, "glEnable");
	glEnableClientState_real = GetProcAddress(hModule, "glEnableClientState");
	glEnd_real = GetProcAddress(hModule, "glEnd");
	glEndList_real = GetProcAddress(hModule, "glEndList");
	glEvalCoord1d_real = GetProcAddress(hModule, "glEvalCoord1d");
	glEvalCoord1dv_real = GetProcAddress(hModule, "glEvalCoord1dv");
	glEvalCoord1f_real = GetProcAddress(hModule, "glEvalCoord1f");
	glEvalCoord1fv_real = GetProcAddress(hModule, "glEvalCoord1fv");
	glEvalCoord2d_real = GetProcAddress(hModule, "glEvalCoord2d");
	glEvalCoord2dv_real = GetProcAddress(hModule, "glEvalCoord2dv");
	glEvalCoord2f_real = GetProcAddress(hModule, "glEvalCoord2f");
	glEvalCoord2fv_real = GetProcAddress(hModule, "glEvalCoord2fv");
	glEvalMesh1_real = GetProcAddress(hModule, "glEvalMesh1");
	glEvalMesh2_real = GetProcAddress(hModule, "glEvalMesh2");
	glEvalPoint1_real = GetProcAddress(hModule, "glEvalPoint1");
	glEvalPoint2_real = GetProcAddress(hModule, "glEvalPoint2");
	glFeedbackBuffer_real = GetProcAddress(hModule, "glFeedbackBuffer");
	glFinish_real = GetProcAddress(hModule, "glFinish");
	glFlush_real = GetProcAddress(hModule, "glFlush");
	glFogf_real = GetProcAddress(hModule, "glFogf");
	glFogfv_real = GetProcAddress(hModule, "glFogfv");
	glFogi_real = GetProcAddress(hModule, "glFogi");
	glFogiv_real = GetProcAddress(hModule, "glFogiv");
	glFrontFace_real = GetProcAddress(hModule, "glFrontFace");
	glFrustum_real = GetProcAddress(hModule, "glFrustum");
	glGenLists_real = GetProcAddress(hModule, "glGenLists");
	glGenTextures_real = GetProcAddress(hModule, "glGenTextures");
	glGetBooleanv_real = GetProcAddress(hModule, "glGetBooleanv");
	glGetClipPlane_real = GetProcAddress(hModule, "glGetClipPlane");
	glGetDoublev_real = GetProcAddress(hModule, "glGetDoublev");
	glGetError_real = GetProcAddress(hModule, "glGetError");
	glGetFloatv_real = GetProcAddress(hModule, "glGetFloatv");
	glGetIntegerv_real = GetProcAddress(hModule, "glGetIntegerv");
	glGetLightfv_real = GetProcAddress(hModule, "glGetLightfv");
	glGetLightiv_real = GetProcAddress(hModule, "glGetLightiv");
	glGetMapdv_real = GetProcAddress(hModule, "glGetMapdv");
	glGetMapfv_real = GetProcAddress(hModule, "glGetMapfv");
	glGetMapiv_real = GetProcAddress(hModule, "glGetMapiv");
	glGetMaterialfv_real = GetProcAddress(hModule, "glGetMaterialfv");
	glGetMaterialiv_real = GetProcAddress(hModule, "glGetMaterialiv");
	glGetPixelMapfv_real = GetProcAddress(hModule, "glGetPixelMapfv");
	glGetPixelMapuiv_real = GetProcAddress(hModule, "glGetPixelMapuiv");
	glGetPixelMapusv_real = GetProcAddress(hModule, "glGetPixelMapusv");
	glGetPointerv_real = GetProcAddress(hModule, "glGetPointerv");
	glGetPolygonStipple_real = GetProcAddress(hModule, "glGetPolygonStipple");
	glGetString_real = GetProcAddress(hModule, "glGetString");
	glGetTexEnvfv_real = GetProcAddress(hModule, "glGetTexEnvfv");
	glGetTexEnviv_real = GetProcAddress(hModule, "glGetTexEnviv");
	glGetTexGendv_real = GetProcAddress(hModule, "glGetTexGendv");
	glGetTexGenfv_real = GetProcAddress(hModule, "glGetTexGenfv");
	glGetTexGeniv_real = GetProcAddress(hModule, "glGetTexGeniv");
	glGetTexImage_real = GetProcAddress(hModule, "glGetTexImage");
	glGetTexLevelParameterfv_real = GetProcAddress(hModule, "glGetTexLevelParameterfv");
	glGetTexLevelParameteriv_real = GetProcAddress(hModule, "glGetTexLevelParameteriv");
	glGetTexParameterfv_real = GetProcAddress(hModule, "glGetTexParameterfv");
	glGetTexParameteriv_real = GetProcAddress(hModule, "glGetTexParameteriv");
	glHint_real = GetProcAddress(hModule, "glHint");
	glIndexMask_real = GetProcAddress(hModule, "glIndexMask");
	glIndexPointer_real = GetProcAddress(hModule, "glIndexPointer");
	glIndexd_real = GetProcAddress(hModule, "glIndexd");
	glIndexdv_real = GetProcAddress(hModule, "glIndexdv");
	glIndexf_real = GetProcAddress(hModule, "glIndexf");
	glIndexfv_real = GetProcAddress(hModule, "glIndexfv");
	glIndexi_real = GetProcAddress(hModule, "glIndexi");
	glIndexiv_real = GetProcAddress(hModule, "glIndexiv");
	glIndexs_real = GetProcAddress(hModule, "glIndexs");
	glIndexsv_real = GetProcAddress(hModule, "glIndexsv");
	glIndexub_real = GetProcAddress(hModule, "glIndexub");
	glIndexubv_real = GetProcAddress(hModule, "glIndexubv");
	glInitNames_real = GetProcAddress(hModule, "glInitNames");
	glInterleavedArrays_real = GetProcAddress(hModule, "glInterleavedArrays");
	glIsEnabled_real = GetProcAddress(hModule, "glIsEnabled");
	glIsList_real = GetProcAddress(hModule, "glIsList");
	glIsTexture_real = GetProcAddress(hModule, "glIsTexture");
	glLightModelf_real = GetProcAddress(hModule, "glLightModelf");
	glLightModelfv_real = GetProcAddress(hModule, "glLightModelfv");
	glLightModeli_real = GetProcAddress(hModule, "glLightModeli");
	glLightModeliv_real = GetProcAddress(hModule, "glLightModeliv");
	glLightf_real = GetProcAddress(hModule, "glLightf");
	glLightfv_real = GetProcAddress(hModule, "glLightfv");
	glLighti_real = GetProcAddress(hModule, "glLighti");
	glLightiv_real = GetProcAddress(hModule, "glLightiv");
	glLineStipple_real = GetProcAddress(hModule, "glLineStipple");
	glLineWidth_real = GetProcAddress(hModule, "glLineWidth");
	glListBase_real = GetProcAddress(hModule, "glListBase");
	glLoadIdentity_real = GetProcAddress(hModule, "glLoadIdentity");
	glLoadMatrixd_real = GetProcAddress(hModule, "glLoadMatrixd");
	glLoadMatrixf_real = GetProcAddress(hModule, "glLoadMatrixf");
	glLoadName_real = GetProcAddress(hModule, "glLoadName");
	glLogicOp_real = GetProcAddress(hModule, "glLogicOp");
	glMap1d_real = GetProcAddress(hModule, "glMap1d");
	glMap1f_real = GetProcAddress(hModule, "glMap1f");
	glMap2d_real = GetProcAddress(hModule, "glMap2d");
	glMap2f_real = GetProcAddress(hModule, "glMap2f");
	glMapGrid1d_real = GetProcAddress(hModule, "glMapGrid1d");
	glMapGrid1f_real = GetProcAddress(hModule, "glMapGrid1f");
	glMapGrid2d_real = GetProcAddress(hModule, "glMapGrid2d");
	glMapGrid2f_real = GetProcAddress(hModule, "glMapGrid2f");
	glMaterialf_real = GetProcAddress(hModule, "glMaterialf");
	glMaterialfv_real = GetProcAddress(hModule, "glMaterialfv");
	glMateriali_real = GetProcAddress(hModule, "glMateriali");
	glMaterialiv_real = GetProcAddress(hModule, "glMaterialiv");
	glMatrixMode_real = GetProcAddress(hModule, "glMatrixMode");
	glMultMatrixd_real = GetProcAddress(hModule, "glMultMatrixd");
	glMultMatrixf_real = GetProcAddress(hModule, "glMultMatrixf");
	glNewList_real = GetProcAddress(hModule, "glNewList");
	glNormal3b_real = GetProcAddress(hModule, "glNormal3b");
	glNormal3bv_real = GetProcAddress(hModule, "glNormal3bv");
	glNormal3d_real = GetProcAddress(hModule, "glNormal3d");
	glNormal3dv_real = GetProcAddress(hModule, "glNormal3dv");
	glNormal3f_real = GetProcAddress(hModule, "glNormal3f");
	glNormal3fv_real = GetProcAddress(hModule, "glNormal3fv");
	glNormal3i_real = GetProcAddress(hModule, "glNormal3i");
	glNormal3iv_real = GetProcAddress(hModule, "glNormal3iv");
	glNormal3s_real = GetProcAddress(hModule, "glNormal3s");
	glNormal3sv_real = GetProcAddress(hModule, "glNormal3sv");
	glNormalPointer_real = GetProcAddress(hModule, "glNormalPointer");
	glOrtho_real = GetProcAddress(hModule, "glOrtho");
	glPassThrough_real = GetProcAddress(hModule, "glPassThrough");
	glPixelMapfv_real = GetProcAddress(hModule, "glPixelMapfv");
	glPixelMapuiv_real = GetProcAddress(hModule, "glPixelMapuiv");
	glPixelMapusv_real = GetProcAddress(hModule, "glPixelMapusv");
	glPixelStoref_real = GetProcAddress(hModule, "glPixelStoref");
	glPixelStorei_real = GetProcAddress(hModule, "glPixelStorei");
	glPixelTransferf_real = GetProcAddress(hModule, "glPixelTransferf");
	glPixelTransferi_real = GetProcAddress(hModule, "glPixelTransferi");
	glPixelZoom_real = GetProcAddress(hModule, "glPixelZoom");
	glPointSize_real = GetProcAddress(hModule, "glPointSize");
	glPolygonMode_real = GetProcAddress(hModule, "glPolygonMode");
	glPolygonOffset_real = GetProcAddress(hModule, "glPolygonOffset");
	glPolygonStipple_real = GetProcAddress(hModule, "glPolygonStipple");
	glPopAttrib_real = GetProcAddress(hModule, "glPopAttrib");
	glPopClientAttrib_real = GetProcAddress(hModule, "glPopClientAttrib");
	glPopMatrix_real = GetProcAddress(hModule, "glPopMatrix");
	glPopName_real = GetProcAddress(hModule, "glPopName");
	glPrioritizeTextures_real = GetProcAddress(hModule, "glPrioritizeTextures");
	glPushAttrib_real = GetProcAddress(hModule, "glPushAttrib");
	glPushClientAttrib_real = GetProcAddress(hModule, "glPushClientAttrib");
	glPushMatrix_real = GetProcAddress(hModule, "glPushMatrix");
	glPushName_real = GetProcAddress(hModule, "glPushName");
	glRasterPos2d_real = GetProcAddress(hModule, "glRasterPos2d");
	glRasterPos2dv_real = GetProcAddress(hModule, "glRasterPos2dv");
	glRasterPos2f_real = GetProcAddress(hModule, "glRasterPos2f");
	glRasterPos2fv_real = GetProcAddress(hModule, "glRasterPos2fv");
	glRasterPos2i_real = GetProcAddress(hModule, "glRasterPos2i");
	glRasterPos2iv_real = GetProcAddress(hModule, "glRasterPos2iv");
	glRasterPos2s_real = GetProcAddress(hModule, "glRasterPos2s");
	glRasterPos2sv_real = GetProcAddress(hModule, "glRasterPos2sv");
	glRasterPos3d_real = GetProcAddress(hModule, "glRasterPos3d");
	glRasterPos3dv_real = GetProcAddress(hModule, "glRasterPos3dv");
	glRasterPos3f_real = GetProcAddress(hModule, "glRasterPos3f");
	glRasterPos3fv_real = GetProcAddress(hModule, "glRasterPos3fv");
	glRasterPos3i_real = GetProcAddress(hModule, "glRasterPos3i");
	glRasterPos3iv_real = GetProcAddress(hModule, "glRasterPos3iv");
	glRasterPos3s_real = GetProcAddress(hModule, "glRasterPos3s");
	glRasterPos3sv_real = GetProcAddress(hModule, "glRasterPos3sv");
	glRasterPos4d_real = GetProcAddress(hModule, "glRasterPos4d");
	glRasterPos4dv_real = GetProcAddress(hModule, "glRasterPos4dv");
	glRasterPos4f_real = GetProcAddress(hModule, "glRasterPos4f");
	glRasterPos4fv_real = GetProcAddress(hModule, "glRasterPos4fv");
	glRasterPos4i_real = GetProcAddress(hModule, "glRasterPos4i");
	glRasterPos4iv_real = GetProcAddress(hModule, "glRasterPos4iv");
	glRasterPos4s_real = GetProcAddress(hModule, "glRasterPos4s");
	glRasterPos4sv_real = GetProcAddress(hModule, "glRasterPos4sv");
	glReadBuffer_real = GetProcAddress(hModule, "glReadBuffer");
	glReadPixels_real = GetProcAddress(hModule, "glReadPixels");
	glRectd_real = GetProcAddress(hModule, "glRectd");
	glRectdv_real = GetProcAddress(hModule, "glRectdv");
	glRectf_real = GetProcAddress(hModule, "glRectf");
	glRectfv_real = GetProcAddress(hModule, "glRectfv");
	glRecti_real = GetProcAddress(hModule, "glRecti");
	glRectiv_real = GetProcAddress(hModule, "glRectiv");
	glRects_real = GetProcAddress(hModule, "glRects");
	glRectsv_real = GetProcAddress(hModule, "glRectsv");
	glRenderMode_real = GetProcAddress(hModule, "glRenderMode");
	glRotated_real = GetProcAddress(hModule, "glRotated");
	glRotatef_real = GetProcAddress(hModule, "glRotatef");
	glScaled_real = GetProcAddress(hModule, "glScaled");
	glScalef_real = GetProcAddress(hModule, "glScalef");
	glScissor_real = GetProcAddress(hModule, "glScissor");
	glSelectBuffer_real = GetProcAddress(hModule, "glSelectBuffer");
	glShadeModel_real = GetProcAddress(hModule, "glShadeModel");
	glStencilFunc_real = GetProcAddress(hModule, "glStencilFunc");
	glStencilMask_real = GetProcAddress(hModule, "glStencilMask");
	glStencilOp_real = GetProcAddress(hModule, "glStencilOp");
	glTexCoord1d_real = GetProcAddress(hModule, "glTexCoord1d");
	glTexCoord1dv_real = GetProcAddress(hModule, "glTexCoord1dv");
	glTexCoord1f_real = GetProcAddress(hModule, "glTexCoord1f");
	glTexCoord1fv_real = GetProcAddress(hModule, "glTexCoord1fv");
	glTexCoord1i_real = GetProcAddress(hModule, "glTexCoord1i");
	glTexCoord1iv_real = GetProcAddress(hModule, "glTexCoord1iv");
	glTexCoord1s_real = GetProcAddress(hModule, "glTexCoord1s");
	glTexCoord1sv_real = GetProcAddress(hModule, "glTexCoord1sv");
	glTexCoord2d_real = GetProcAddress(hModule, "glTexCoord2d");
	glTexCoord2dv_real = GetProcAddress(hModule, "glTexCoord2dv");
	glTexCoord2f_real = GetProcAddress(hModule, "glTexCoord2f");
	glTexCoord2fv_real = GetProcAddress(hModule, "glTexCoord2fv");
	glTexCoord2i_real = GetProcAddress(hModule, "glTexCoord2i");
	glTexCoord2iv_real = GetProcAddress(hModule, "glTexCoord2iv");
	glTexCoord2s_real = GetProcAddress(hModule, "glTexCoord2s");
	glTexCoord2sv_real = GetProcAddress(hModule, "glTexCoord2sv");
	glTexCoord3d_real = GetProcAddress(hModule, "glTexCoord3d");
	glTexCoord3dv_real = GetProcAddress(hModule, "glTexCoord3dv");
	glTexCoord3f_real = GetProcAddress(hModule, "glTexCoord3f");
	glTexCoord3fv_real = GetProcAddress(hModule, "glTexCoord3fv");
	glTexCoord3i_real = GetProcAddress(hModule, "glTexCoord3i");
	glTexCoord3iv_real = GetProcAddress(hModule, "glTexCoord3iv");
	glTexCoord3s_real = GetProcAddress(hModule, "glTexCoord3s");
	glTexCoord3sv_real = GetProcAddress(hModule, "glTexCoord3sv");
	glTexCoord4d_real = GetProcAddress(hModule, "glTexCoord4d");
	glTexCoord4dv_real = GetProcAddress(hModule, "glTexCoord4dv");
	glTexCoord4f_real = GetProcAddress(hModule, "glTexCoord4f");
	glTexCoord4fv_real = GetProcAddress(hModule, "glTexCoord4fv");
	glTexCoord4i_real = GetProcAddress(hModule, "glTexCoord4i");
	glTexCoord4iv_real = GetProcAddress(hModule, "glTexCoord4iv");
	glTexCoord4s_real = GetProcAddress(hModule, "glTexCoord4s");
	glTexCoord4sv_real = GetProcAddress(hModule, "glTexCoord4sv");
	glTexCoordPointer_real = GetProcAddress(hModule, "glTexCoordPointer");
	glTexEnvf_real = GetProcAddress(hModule, "glTexEnvf");
	glTexEnvfv_real = GetProcAddress(hModule, "glTexEnvfv");
	glTexEnvi_real = GetProcAddress(hModule, "glTexEnvi");
	glTexEnviv_real = GetProcAddress(hModule, "glTexEnviv");
	glTexGend_real = GetProcAddress(hModule, "glTexGend");
	glTexGendv_real = GetProcAddress(hModule, "glTexGendv");
	glTexGenf_real = GetProcAddress(hModule, "glTexGenf");
	glTexGenfv_real = GetProcAddress(hModule, "glTexGenfv");
	glTexGeni_real = GetProcAddress(hModule, "glTexGeni");
	glTexGeniv_real = GetProcAddress(hModule, "glTexGeniv");
	glTexImage1D_real = GetProcAddress(hModule, "glTexImage1D");
	glTexImage2D_real = GetProcAddress(hModule, "glTexImage2D");
	glTexParameterf_real = GetProcAddress(hModule, "glTexParameterf");
	glTexParameterfv_real = GetProcAddress(hModule, "glTexParameterfv");
	glTexParameteri_real = GetProcAddress(hModule, "glTexParameteri");
	glTexParameteriv_real = GetProcAddress(hModule, "glTexParameteriv");
	glTexSubImage1D_real = GetProcAddress(hModule, "glTexSubImage1D");
	glTexSubImage2D_real = GetProcAddress(hModule, "glTexSubImage2D");
	glTranslated_real = GetProcAddress(hModule, "glTranslated");
	glTranslatef_real = GetProcAddress(hModule, "glTranslatef");
	glVertex2d_real = GetProcAddress(hModule, "glVertex2d");
	glVertex2dv_real = GetProcAddress(hModule, "glVertex2dv");
	glVertex2f_real = GetProcAddress(hModule, "glVertex2f");
	glVertex2fv_real = GetProcAddress(hModule, "glVertex2fv");
	glVertex2i_real = GetProcAddress(hModule, "glVertex2i");
	glVertex2iv_real = GetProcAddress(hModule, "glVertex2iv");
	glVertex2s_real = GetProcAddress(hModule, "glVertex2s");
	glVertex2sv_real = GetProcAddress(hModule, "glVertex2sv");
	glVertex3d_real = GetProcAddress(hModule, "glVertex3d");
	glVertex3dv_real = GetProcAddress(hModule, "glVertex3dv");
	glVertex3f_real = GetProcAddress(hModule, "glVertex3f");
	glVertex3fv_real = GetProcAddress(hModule, "glVertex3fv");
	glVertex3i_real = GetProcAddress(hModule, "glVertex3i");
	glVertex3iv_real = GetProcAddress(hModule, "glVertex3iv");
	glVertex3s_real = GetProcAddress(hModule, "glVertex3s");
	glVertex3sv_real = GetProcAddress(hModule, "glVertex3sv");
	glVertex4d_real = GetProcAddress(hModule, "glVertex4d");
	glVertex4dv_real = GetProcAddress(hModule, "glVertex4dv");
	glVertex4f_real = GetProcAddress(hModule, "glVertex4f");
	glVertex4fv_real = GetProcAddress(hModule, "glVertex4fv");
	glVertex4i_real = GetProcAddress(hModule, "glVertex4i");
	glVertex4iv_real = GetProcAddress(hModule, "glVertex4iv");
	glVertex4s_real = GetProcAddress(hModule, "glVertex4s");
	glVertex4sv_real = GetProcAddress(hModule, "glVertex4sv");
	glVertexPointer_real = GetProcAddress(hModule, "glVertexPointer");
	glViewport_real = GetProcAddress(hModule, "glViewport");
	wglChoosePixelFormat_real = GetProcAddress(hModule, "wglChoosePixelFormat");
	wglCopyContext_real = GetProcAddress(hModule, "wglCopyContext");
	wglCreateContext_real = GetProcAddress(hModule, "wglCreateContext");
	wglCreateLayerContext_real = GetProcAddress(hModule, "wglCreateLayerContext");
	wglDeleteContext_real = GetProcAddress(hModule, "wglDeleteContext");
	wglDescribeLayerPlane_real = GetProcAddress(hModule, "wglDescribeLayerPlane");
	wglDescribePixelFormat_real = GetProcAddress(hModule, "wglDescribePixelFormat");
	wglGetCurrentContext_real = GetProcAddress(hModule, "wglGetCurrentContext");
	wglGetCurrentDC_real = GetProcAddress(hModule, "wglGetCurrentDC");
	wglGetDefaultProcAddress_real = GetProcAddress(hModule, "wglGetDefaultProcAddress");
	wglGetLayerPaletteEntries_real = GetProcAddress(hModule, "wglGetLayerPaletteEntries");
	wglGetPixelFormat_real = GetProcAddress(hModule, "wglGetPixelFormat");
	wglGetProcAddress_real = (wglGetProcAddress_type)GetProcAddress(hModule, "wglGetProcAddress");
	wglMakeCurrent_real = GetProcAddress(hModule, "wglMakeCurrent");
	wglRealizeLayerPalette_real = GetProcAddress(hModule, "wglRealizeLayerPalette");
	wglSetLayerPaletteEntries_real = GetProcAddress(hModule, "wglSetLayerPaletteEntries");
	wglSetPixelFormat_real = GetProcAddress(hModule, "wglSetPixelFormat");
	wglShareLists_real = GetProcAddress(hModule, "wglShareLists");
	wglSwapBuffers_real = GetProcAddress(hModule, "wglSwapBuffers");
	wglSwapLayerBuffers_real = GetProcAddress(hModule, "wglSwapLayerBuffers");
	wglSwapMultipleBuffers_real = GetProcAddress(hModule, "wglSwapMultipleBuffers");
	wglUseFontBitmapsA_real = GetProcAddress(hModule, "wglUseFontBitmapsA");
	wglUseFontBitmapsW_real = GetProcAddress(hModule, "wglUseFontBitmapsW");
	wglUseFontOutlinesA_real = GetProcAddress(hModule, "wglUseFontOutlinesA");
	wglUseFontOutlinesW_real = GetProcAddress(hModule, "wglUseFontOutlinesW");

	return true;
}

void module_deinit()
{
	if (dll_no_longer_needed()) rename("opengl32.dll", "opengl32.dll.ignore");
}

BOOL APIENTRY DllMain(HMODULE hModule,
	DWORD  ul_reason_for_call,
	LPVOID lpReserved
	)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
		return module_init();
	case DLL_THREAD_ATTACH:
		break;
	case DLL_THREAD_DETACH:
		break;
	case DLL_PROCESS_DETACH:
		module_deinit();
		break;
	}
	return TRUE;
}
